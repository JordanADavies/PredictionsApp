import 'package:collection/collection.dart';
import 'package:flutter/foundation.dart';
import 'package:meta/meta.dart';
import 'package:predictions/data/api/matches_api.dart';
import 'package:predictions/data/model/football_match.dart';
import 'package:rxdart/subjects.dart';

class Matches {
  final List<FootballMatch> allMatches;
  final List<FootballMatch> thisSeasonsMatches;
  final Map<String, Map<String, List<FootballMatch>>> groupedMatches;

  final List<FootballMatch> winLoseDrawMatches;
  final List<FootballMatch> under3Matches;
  final List<FootballMatch> over2Matches;
  final List<FootballMatch> bttsNoMatches;
  final List<FootballMatch> bttsYesMatches;

  Matches(
      {@required this.allMatches,
      @required this.thisSeasonsMatches,
      @required this.groupedMatches,
      @required this.winLoseDrawMatches,
      @required this.under3Matches,
      @required this.over2Matches,
      @required this.bttsNoMatches,
      @required this.bttsYesMatches});
}

class MatchesBloc {
  final BehaviorSubject<Matches> matches = BehaviorSubject<Matches>();

  void dispose() {
    matches.close();
  }

  MatchesBloc() {
    _loadMatches();
  }

  Future _loadMatches() async {
    final api = MatchesApi();
    final apiMatches = await api.fetchMatches();

    final matchesData = await compute(_getMatchesData, apiMatches);
    matches.add(matchesData);
  }

  static Matches _getMatchesData(List<FootballMatch> allMatches) {
    final thisSeasonsMatches = allMatches.where(_isThisSeason).toList();
    return Matches(
      allMatches: allMatches,
      thisSeasonsMatches: thisSeasonsMatches,
      groupedMatches: _groupMatches(thisSeasonsMatches),
      winLoseDrawMatches: _getWinLoseDrawMatches(thisSeasonsMatches),
      under3Matches: _getUnder3Matches(thisSeasonsMatches),
      over2Matches: _getOver2Matches(thisSeasonsMatches),
      bttsNoMatches: _getBttsNoMatches(thisSeasonsMatches),
      bttsYesMatches: _getBttsYesMatches(thisSeasonsMatches),
    );
  }

  static bool _isThisSeason(FootballMatch match) {
    final dateSplitString = match.date.split("-");
    return dateSplitString[0] == "2019";
  }

  static Map<String, Map<String, List<FootballMatch>>> _groupMatches(
      List<FootballMatch> matches) {
    final groupedByDay = groupBy(matches, (obj) => obj.date);
    return groupedByDay.map(
        (key, value) => MapEntry(key, groupBy(value, (obj) => obj.league)));
  }

  static List<FootballMatch> _getWinLoseDrawMatches(
      List<FootballMatch> allMatches) {
    final teamsWithHighWinLoseDraw = [
      "(H) Arsenal",
      "(H) Braga",
      "(H) Manchester City",
      "(H) Osasuna",
      "(H) Getafe",
      "(H) Rayo Majadahonda",
      "(H) FC Porto",
      "(H) Valenciennes",
      "(H) Guimaraes",
      "(H) Sheffield United",
      "(H) Pachuca",
      "(H) Atletico Madrid",
      "(H) Barcelona",
      "(H) Norwich City",
      "(H) Lecce",
      "(H) Hannover 96",
      "(H) Galatasaray",
      "(H) Standard Liege",
      "(H) PAOK Salonika",
      "(H) AZ",
      "(H) Eupen",
      "(H) FC Groningen",
      "(H) Tigres UANL",
      "(H) Frosinone",
      "(H) Ajax",
      "(H) Fulham",
      "(H) Juventus",
      "(H) Motherwell",
      "(H) St Johnstone",
      "(H) Dundee",
      "(H) St Mirren",
      "(H) Bayern Munich",
      "(H) Lazio",
      "(H) Fenerbahce",
      "(H) Olympiacos",
      "(H) Young Boys",
      "(H) FC Cologne",
      "(H) Viktoria Plzen",
      "(H) Zenit St Petersburg",
      "(H) LASK Linz",
      "(H) Guangzhou Evergrande",
      "(H) Wuhan Zall",
      "(H) Nagoya Grampus Eight",
      "(H) Ural Sverdlovsk Oblast",
      "(H) Los Angeles Galaxy",
      "(H) Seattle Sounders FC",
      "(H) Jiangsu Suning FC",
      "(H) Los Angeles FC",
      "(H) Krylia Sovetov",
      "(H) Dinamo Moscow",
      "(H) Sporting Kansas City",
      "(H) Colorado Springs Switchbacks FC",
      "(H) Portland Timbers 2",
      "(H) Tianjin Teda",
      "(H) Guizhou Renhe",
      "(H) Hebei China Fortune FC",
      "(H) Odd BK",
      "(H) Valerenga",
      "(H) Indy Eleven",
      "(H) Austin Bold FC",
      "(H) Stromsgodset",
      "(H) Beijing Guoan",
      "(H) BK Hacken",
      "(H) Ottawa Fury FC",
      "(H) Östersunds FK",
      "(H) IFK Goteborg",
      "(H) Molde",
      "(H) Lillestrom",
      "(H) Kristiansund BK",
      "(A) Newport County",
      "(A) Fulham",
      "(A) Swansea City",
      "(A) AD Alcorcon",
      "(A) Maritzburg Utd",
      "(A) Reus Deportiu",
      "(A) Boavista",
      "(A) C.D. Nacional",
      "(A) Huddersfield Town",
      "(A) Apollon Smyrni",
      "(A) Paris Saint-Germain",
      "(A) Querétaro",
      "(A) Pumas Unam",
      "(A) AFC Bournemouth",
      "(A) Olympiacos",
      "(A) PAOK Salonika",
      "(A) Gimnástic Tarragona",
      "(A) Excelsior",
      "(A) Mainz",
      "(A) KSC Lokeren",
      "(A) NAC",
      "(A) Fortuna Sittard",
      "(A) Manchester City",
      "(A) Anderlecht",
      "(A) Empoli",
      "(A) Asteras Tripolis",
      "(A) Dijon FCO",
      "(A) Hibernian",
      "(A) Carpi",
      "(A) Hannover 96",
      "(A) 1. FC Nürnberg",
      "(A) Motherwell",
      "(A) Hamilton Academical",
      "(A) Emmen",
      "(A) RB Leipzig",
      "(A) FC Ingolstadt 04",
      "(A) Celtic",
      "(A) Dinamo Zagreb",
      "(A) Shakhtar Donetsk",
      "(A) BATE Borisov",
      "(A) Viktoria Plzen",
      "(A) FK Austria Vienna",
      "(A) Guizhou Renhe",
      "(A) Shanghai SIPG",
      "(A) Tianjin Quanujian",
      "(A) Beijing Guoan",
      "(A) Vegalta Sendai",
      "(A) Atlanta United FC",
      "(A) Metallurg Krasnoyarsk",
      "(A) Jiangsu Suning FC",
      "(A) Swope Park Rangers",
      "(A) Vancouver Whitecaps",
      "(A) Colorado Rapids",
      "(A) Spartak Moscow",
      "(A) Lokomotiv Moscow",
      "(A) San Jose Earthquakes",
      "(A) Las Vegas Lights FC",
      "(A) LA Galaxy II",
      "(A) Tacoma Defiance",
      "(A) San Antonio FC",
      "(A) Guangzhou Evergrande",
      "(A) SK Brann",
      "(A) Mjondalen",
      "(A) Charlotte Independence",
      "(A) Shenzhen FC",
      "(A) Wuhan Zall",
      "(A) Haugesund",
      "(A) Helsingborgs IF",
      "(A) Falkenbergs FF",
      "(A) IF Elfsborg",
      "(A) Stabaek",
      "(A) Ranheim",
      "(A) Valerenga",
    ];
    return allMatches
        .where((m) =>
            teamsWithHighWinLoseDraw.contains("(H) ${m.homeTeam}") ||
            teamsWithHighWinLoseDraw.contains("(A) ${m.awayTeam}"))
        .toList();
  }

  static List<FootballMatch> _getUnder3Matches(List<FootballMatch> allMatches) {
    final leaguesWithHighUnder3 = [
      "(H) Blackpool",
      "(H) Swindon Town",
      "(H) Stoke City",
      "(H) Derby County",
      "(H) Boavista",
      "(H) Chippa United",
      "(H) Granada",
      "(H) Extremadura UD",
      "(H) Sporting Gijón",
      "(H) Almeria",
      "(H) Baroka FC",
      "(H) Vitoria Setubal",
      "(H) Gimnástic Tarragona",
      "(H) Getafe",
      "(H) Moreirense",
      "(H) Amiens",
      "(H) Cadiz",
      "(H) Sunderland",
      "(H) Reus Deportiu",
      "(H) Real Oviedo",
      "(H) Mallorca",
      "(H) Levadiakos",
      "(H) Giannina",
      "(H) Mamelodi Sundowns",
      "(H) Beziers AS",
      "(H) Auxerre",
      "(H) Metz",
      "(H) Niort",
      "(H) Kilmarnock",
      "(H) Cremonese",
      "(H) Panionios",
      "(H) Konyaspor",
      "(H) F.B.C Unione Venezia",
      "(H) Troyes",
      "(H) Colon Santa Fe",
      "(H) Talleres de Córdoba",
      "(H) Rosario Central",
      "(H) Sagan Tosu",
      "(H) Gazovik Orenburg",
      "(H) Rubin Kazan",
      "(H) Metallurg Krasnoyarsk",
      "(H) FC Tokyo",
      "(H) Anzhi Makhachkala",
      "(A) Maritimo",
      "(A) Vitoria Setubal",
      "(A) Belenenses",
      "(A) Leganes",
      "(A) Real Zaragoza",
      "(A) Maritzburg Utd",
      "(A) Las Palmas",
      "(A) Chippa United",
      "(A) Kaizer Chiefs",
      "(A) Sochaux",
      "(A) Le Havre",
      "(A) Forest Green Rovers",
      "(A) Charlton Athletic",
      "(A) Sheffield Wednesday",
      "(A) Sporting Gijón",
      "(A) Morecambe",
      "(A) Stoke City",
      "(A) Deportivo La Coruña",
      "(A) Almeria",
      "(A) FC Xanthi",
      "(A) Málaga",
      "(A) Lens",
      "(A) Nice",
      "(A) AC Ajaccio",
      "(A) Konyaspor",
      "(A) Benevento",
      "(A) Shrewsbury Town",
      "(A) Levadiakos",
      "(A) Cremonese",
      "(A) Lorient",
      "(A) Rosario Central",
      "(A) Antalyaspor",
      "(A) Caen",
      "(A) Giannina",
      "(A) Belgrano Cordoba",
      "(A) Jubilo Iwata",
      "(A) Sagan Tosu",
      "(A) Terek Grozny",
      "(A) Rostov",
    ];
    return allMatches
        .where((m) =>
            leaguesWithHighUnder3.contains("(H) ${m.homeTeam}") ||
            leaguesWithHighUnder3.contains("(A) ${m.awayTeam}"))
        .toList();
  }

  static List<FootballMatch> _getOver2Matches(List<FootballMatch> allMatches) {
    final leaguesWithHighOver2 = [
      "(H) Rotherham United",
      "(H) Morecambe",
      "(H) Doncaster Rovers",
      "(H) Cardiff City",
      "(H) Huddersfield Town",
      "(H) Newcastle",
      "(H) Villarreal",
      "(H) Adelaide United",
      "(H) Real Valladolid",
      "(H) Extremadura UD",
      "(H) Colchester United",
      "(H) Brisbane Roar",
      "(H) Sevilla FC",
      "(H) FC Porto",
      "(H) Amiens",
      "(H) Perth Glory",
      "(H) Caen",
      "(H) Valenciennes",
      "(H) Brest",
      "(H) Northampton Town",
      "(H) Burnley",
      "(H) Barnsley",
      "(H) Walsall",
      "(H) Crewe Alexandra",
      "(H) Valencia",
      "(H) Cordoba",
      "(H) Dijon FCO",
      "(H) Real Betis",
      "(H) Akhisar Belediye",
      "(H) Yeni Malatyaspor",
      "(H) AS Roma",
      "(H) FC Augsburg",
      "(H) Southampton",
      "(H) Eupen",
      "(H) River Plate",
      "(H) Frosinone",
      "(H) Alanyaspor",
      "(H) Ajax",
      "(H) Schalke 04",
      "(H) Napoli",
      "(H) US Pescara",
      "(H) Hamilton Academical",
      "(H) Kayserispor",
      "(H) Mainz",
      "(H) Panetolikos",
      "(H) Werder Bremen",
      "(H) Cercle Brugge",
      "(H) KSC Lokeren",
      "(H) Chievo Verona",
      "(H) Feyenoord",
      "(H) Parma",
      "(H) KV Kortrijk",
      "(H) Ankaragucu",
      "(H) Fenerbahce",
      "(H) Empoli",
      "(H) VfL Bochum",
      "(H) Olympiacos",
      "(H) 1. FC Union Berlin",
      "(H) FC Ingolstadt 04",
      "(H) Rangers",
      "(H) St Gallen",
      "(H) FC Cologne",
      "(H) Hobro IK",
      "(H) FC Nordsjaelland",
      "(H) FC Sion",
      "(H) Shakhtar Donetsk",
      "(H) AC Horsens",
      "(H) Esbjerg",
      "(H) FC Salzburg",
      "(H) Gamba Osaka",
      "(H) Kashima Antlers",
      "(H) SV Mattersburg",
      "(H) Brondby",
      "(H) Shanghai Greenland",
      "(H) Yokohama F. Marinos",
      "(H) Shimizu S-Pulse",
      "(H) Nagoya Grampus Eight",
      "(H) Philadelphia Union",
      "(H) Los Angeles Galaxy",
      "(H) San Jose Earthquakes",
      "(H) FK Austria Vienna",
      "(H) Los Angeles FC",
      "(H) Tacoma Defiance",
      "(H) Consadole Sapporo",
      "(H) Guangzhou RF",
      "(H) New York Red Bulls II",
      "(H) New England Revolution",
      "(H) North Carolina FC",
      "(H) San Antonio FC",
      "(H) New Mexico United",
      "(H) LA Galaxy II",
      "(H) Charlotte Independence",
      "(H) Real Monarchs SLC",
      "(H) Oklahoma City Energy FC",
      "(H) Arizona United",
      "(H) Toronto FC",
      "(H) Tianjin Teda",
      "(H) Hebei China Fortune FC",
      "(H) Molde",
      "(A) Walsall",
      "(A) Tranmere Rovers",
      "(A) Fulham",
      "(A) Queens Park Rangers",
      "(A) Norwich City",
      "(A) Tottenham Hotspur",
      "(A) Burnley",
      "(A) Watford",
      "(A) Real Madrid",
      "(A) Girona FC",
      "(A) Leganes",
      "(A) Wellington Phoenix",
      "(A) Rayo Vallecano",
      "(A) Valencia",
      "(A) Mallorca",
      "(A) Rio Ave",
      "(A) C.D. Nacional",
      "(A) SD Huesca",
      "(A) Macclesfield",
      "(A) Alavés",
      "(A) Western Sydney FC",
      "(A) Levante",
      "(A) Stade Rennes",
      "(A) Strasbourg",
      "(A) PAOK Salonika",
      "(A) Eibar",
      "(A) Wolverhampton",
      "(A) Lyon",
      "(A) Marseille",
      "(A) Besiktas",
      "(A) Orléans",
      "(A) Genk",
      "(A) Foggia",
      "(A) Mainz",
      "(A) Hull City",
      "(A) Oldham Athletic",
      "(A) Peterborough United",
      "(A) Guingamp",
      "(A) Chelsea",
      "(A) VVV Venlo",
      "(A) Cercle Brugge",
      "(A) Antwerp",
      "(A) Sivasspor",
      "(A) Fortuna Sittard",
      "(A) Bologna",
      "(A) Fenerbahce",
      "(A) St Mirren",
      "(A) Dundee",
      "(A) Rangers",
      "(A) Erzurumspor",
      "(A) Standard Liege",
      "(A) Schalke 04",
      "(A) Carpi",
      "(A) Hannover 96",
      "(A) 1. FC Nürnberg",
      "(A) Eintracht Frankfurt",
      "(A) FC Groningen",
      "(A) Nimes",
      "(A) Napoli",
      "(A) Emmen",
      "(A) Vitesse",
      "(A) Fiorentina",
      "(A) Antalyaspor",
      "(A) Club Brugge",
      "(A) Spal",
      "(A) VfB Stuttgart",
      "(A) OFI Crete",
      "(A) Erzgebirge Aue",
      "(A) Arminia Bielefeld",
      "(A) Tigre",
      "(A) SpVgg Greuther Fürth",
      "(A) VfL Bochum",
      "(A) Thun",
      "(A) Sonderjyske",
      "(A) FC Lugano",
      "(A) Odense BK",
      "(A) FC Copenhagen",
      "(A) AaB",
      "(A) Shakhtar Donetsk",
      "(A) BATE Borisov",
      "(A) Vissel Kobe",
      "(A) FK Austria Vienna",
      "(A) Nagoya Grampus Eight",
      "(A) Shanghai SIPG",
      "(A) Tianjin Quanujian",
      "(A) Vegalta Sendai",
      "(A) Toronto FC",
      "(A) New York City FC",
      "(A) Portland Timbers",
      "(A) Minnesota United FC",
      "(A) Chicago Fire",
      "(A) Dalian Aerbin",
      "(A) Hartberg",
      "(A) Shonan Bellmare",
      "(A) Swope Park Rangers",
      "(A) Indy Eleven",
      "(A) Hartford Athletic",
      "(A) Portland Timbers 2",
      "(A) Arizona United",
      "(A) Kawasaki Frontale",
      "(A) Las Vegas Lights FC",
      "(A) LA Galaxy II",
      "(A) Tulsa Roughnecks",
      "(A) New Mexico United",
      "(A) Los Angeles FC",
      "(A) Stabaek",
    ];
    return allMatches
        .where((m) =>
            leaguesWithHighOver2.contains("(H) ${m.homeTeam}") ||
            leaguesWithHighOver2.contains("(A) ${m.awayTeam}"))
        .toList();
  }

  static List<FootballMatch> _getBttsNoMatches(List<FootballMatch> allMatches) {
    final leaguesWithHighBttsNo = [
      "(H) Osasuna",
      "(H) Cadiz",
      "(H) Brest",
      "(H) Asteras Tripolis",
      "(H) Barcelona",
      "(H) Mamelodi Sundowns",
      "(H) Eintracht Frankfurt",
      "(H) Galatasaray",
      "(H) Paris Saint-Germain",
      "(H) Internazionale",
      "(H) FC Xanthi",
      "(H) Rangers",
      "(H) Rapid Vienna",
      "(H) LASK Linz",
      "(H) Seattle Sounders FC",
      "(H) Nashville SC",
      "(H) Tampa Bay Rowdies",
      "(A) AFC Wimbledon",
      "(A) Rochdale",
      "(A) Tondela",
      "(A) Maritimo",
      "(A) Vitoria Setubal",
      "(A) Brighton and Hove Albion",
      "(A) Real Zaragoza",
      "(A) Black Leopards",
      "(A) Maritzburg Utd",
      "(A) Chaves",
      "(A) Reus Deportiu",
      "(A) Niort",
      "(A) Beziers AS",
      "(A) Paris FC",
      "(A) Auxerre",
      "(A) Huddersfield Town",
      "(A) Real Valladolid",
      "(A) Panionios",
      "(A) Bordeaux",
      "(A) Rayo Majadahonda",
      "(A) Lamia",
      "(A) Wolverhampton",
      "(A) Konyaspor",
      "(A) AS Nancy Lorraine",
      "(A) Mainz",
      "(A) Cardiff City",
      "(A) West Ham United",
      "(A) Levadiakos",
      "(A) VVV Venlo",
      "(A) KSC Lokeren",
      "(A) NAC",
      "(A) Bologna",
      "(A) Hertha Berlin",
      "(A) Asteras Tripolis",
      "(A) Panathinaikos",
      "(A) Chievo Verona",
      "(A) St Mirren",
      "(A) Hibernian",
      "(A) Livingston",
      "(A) Dundee",
      "(A) Schalke 04",
      "(A) Bursaspor",
      "(A) 1. FC Nürnberg",
      "(A) St Johnstone",
      "(A) Hamilton Academical",
      "(A) Akhisar Belediye",
      "(A) Antalyaspor",
      "(A) Frosinone",
      "(A) Larissa",
      "(A) Internazionale",
      "(A) FC Zurich",
      "(A) Esbjerg",
      "(A) Vejle",
      "(A) Rapid Vienna",
      "(A) FC Wacker Innsbruck",
      "(A) Anzhi Makhachkala",
      "(A) Krylia Sovetov",
      "(A) Rubin Kazan",
      "(A) Loudoun United FC",
      "(A) Colorado Rapids",
    ];
    return allMatches
        .where((m) =>
            leaguesWithHighBttsNo.contains("(H) ${m.homeTeam}") ||
            leaguesWithHighBttsNo.contains("(A) ${m.awayTeam}"))
        .toList();
  }

  static List<FootballMatch> _getBttsYesMatches(
      List<FootballMatch> allMatches) {
    final leaguesWithHighBttsYes = [
      "(H) Western Sydney FC",
      "(H) Bradford City",
      "(H) AFC Bournemouth",
      "(H) Manchester City",
      "(H) Brisbane Roar",
      "(H) Sevilla FC",
      "(H) Wellington Phoenix",
      "(H) Cheltenham Town",
      "(H) Walsall",
      "(H) Central Coast Mariners",
      "(H) St Etienne",
      "(H) Vitesse",
      "(H) TSG Hoffenheim",
      "(H) Yeni Malatyaspor",
      "(H) AS Roma",
      "(H) VfB Stuttgart",
      "(H) Tranmere Rovers",
      "(H) Galatasaray",
      "(H) Waasland-Beveren",
      "(H) Eupen",
      "(H) SV Zulte Waregem",
      "(H) Willem II",
      "(H) De Graafschap",
      "(H) Club Brugge",
      "(H) Ajax",
      "(H) KAA Gent",
      "(H) Kasimpasa",
      "(H) NAC",
      "(H) Goztepe",
      "(H) Werder Bremen",
      "(H) FC Utrecht",
      "(H) Atalanta",
      "(H) VfL Bochum",
      "(H) SV Darmstadt 98",
      "(H) 1. FC Magdeburg",
      "(H) 1. FC Heidenheim 1846",
      "(H) SC Paderborn",
      "(H) St Gallen",
      "(H) Basel",
      "(H) FC Nordsjaelland",
      "(H) Thun",
      "(H) AC Horsens",
      "(H) Sanfrecce Hiroshima",
      "(H) Gamba Osaka",
      "(H) Kashima Antlers",
      "(H) FC Trenkwalder Admira",
      "(H) Hartberg",
      "(H) Brondby",
      "(H) Vissel Kobe",
      "(H) Los Angeles Galaxy",
      "(H) Consadole Sapporo",
      "(H) Guangzhou RF",
      "(H) New York Red Bulls II",
      "(H) San Antonio FC",
      "(H) LA Galaxy II",
      "(H) Charlotte Independence",
      "(H) Tianjin Teda",
      "(H) Sarpsborg",
      "(A) Tranmere Rovers",
      "(A) Scunthorpe",
      "(A) Northampton Town",
      "(A) Brisbane Roar",
      "(A) Watford",
      "(A) Benfica",
      "(A) Liverpool",
      "(A) Real Madrid",
      "(A) Wellington Phoenix",
      "(A) Newcastle Jets",
      "(A) Perth Glory",
      "(A) Western Sydney FC",
      "(A) Lyon",
      "(A) Besiktas",
      "(A) Excelsior",
      "(A) Peterborough United",
      "(A) Feyenoord",
      "(A) Antwerp",
      "(A) Sivasspor",
      "(A) Standard Liege",
      "(A) Eintracht Frankfurt",
      "(A) PEC Zwolle",
      "(A) St. Truidense",
      "(A) Napoli",
      "(A) Emmen",
      "(A) Willem II",
      "(A) Ajax",
      "(A) KAA Gent",
      "(A) Holstein Kiel",
      "(A) FC Cologne",
      "(A) Thun",
      "(A) FC Luzern",
      "(A) Young Boys",
      "(A) Odense BK",
      "(A) FC Sion",
      "(A) FC Salzburg",
      "(A) Shakhtar Donetsk",
      "(A) Vissel Kobe",
      "(A) Nagoya Grampus Eight",
      "(A) Shimizu S-Pulse",
      "(A) Yokohama F. Marinos",
      "(A) Cashpoint SC Rheindorf Altach",
      "(A) St. Pölten",
      "(A) Guangzhou RF",
      "(A) Wolfsberger AC",
      "(A) Dalian Aerbin",
      "(A) Indy Eleven",
      "(A) Portland Timbers 2",
      "(A) Arizona United",
      "(A) Tulsa Roughnecks",
      "(A) Nashville SC",
      "(A) Molde",
    ];
    return allMatches
        .where((m) =>
            leaguesWithHighBttsYes.contains("(H) ${m.homeTeam}") ||
            leaguesWithHighBttsYes.contains("(A) ${m.awayTeam}"))
        .toList();
  }
}
